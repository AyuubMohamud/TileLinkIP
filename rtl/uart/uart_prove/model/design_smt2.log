
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2020  Claire Xenia Wolf <claire@yosyshq.com>         |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.34+43 (git sha1 d21c464ae, clang 10.0.0-4ubuntu1 -fPIC -Os)


-- Executing script file `design_smt2.ys' --

1. Executing RTLIL frontend.
Input filename: design_prep.il

2. Executing HIERARCHY pass (managing design hierarchy).

2.1. Analyzing design hierarchy..
Top module:  \openPolarisUART
Used module:     \polaris_uart_ip
Used module:         $paramod$9a532d3a74189bb4cf9820f3f80245c16da3e5be\sfifo
Used module:         \uart_tx
Used module:         \uart_rx
Used module:     $paramod\skdbf\DW=s32'00000000000000000000000000110011
Used module:     $paramod$2b3a633f7bbc2a92129dd0bd4a738074dca1a491\tlul_slave_formal

2.2. Analyzing design hierarchy..
Top module:  \openPolarisUART
Used module:     \polaris_uart_ip
Used module:         $paramod$9a532d3a74189bb4cf9820f3f80245c16da3e5be\sfifo
Used module:         \uart_tx
Used module:         \uart_rx
Used module:     $paramod\skdbf\DW=s32'00000000000000000000000000110011
Used module:     $paramod$2b3a633f7bbc2a92129dd0bd4a738074dca1a491\tlul_slave_formal
Removed 0 unused modules.
Module openPolarisUART directly or indirectly contains formal properties -> setting "keep" attribute.
Module $paramod$2b3a633f7bbc2a92129dd0bd4a738074dca1a491\tlul_slave_formal directly or indirectly contains formal properties -> setting "keep" attribute.

3. Executing FORMALFF pass.

4. Executing DFFUNMAP pass (unmap clock enable and synchronous reset from FFs).

5. Printing statistics.

=== uart_tx ===

   Number of wires:                 38
   Number of wire bits:            207
   Number of public wires:          10
   Number of public wire bits:      50
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 35
     $add                            2
     $anyinit                        4
     $assume                         1
     $eq                             4
     $ff                             1
     $logic_not                      1
     $lt                             1
     $mux                           11
     $not                            1
     $pmux                           4
     $reduce_bool                    1
     $reduce_or                      2
     $shiftx                         1
     $sub                            1

=== uart_rx ===

   Number of wires:                 57
   Number of wire bits:            378
   Number of public wires:          15
   Number of public wire bits:      74
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 50
     $add                            3
     $and                            1
     $anyinit                        3
     $anyseq                         2
     $assume                         1
     $eq                             6
     $ff                             4
     $logic_not                      1
     $lt                             1
     $mux                           14
     $neg                            1
     $not                            2
     $or                             1
     $pmux                           5
     $reduce_or                      1
     $shift                          2
     $sub                            2

=== polaris_uart_ip ===

   Number of wires:                 28
   Number of wire bits:             67
   Number of public wires:          25
   Number of public wire bits:      64
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  9
     $and                            3
     $logic_not                      2
     $paramod$9a532d3a74189bb4cf9820f3f80245c16da3e5be\sfifo      2
     uart_rx                         1
     uart_tx                         1

=== openPolarisUART ===

   Number of wires:                 87
   Number of wire bits:            408
   Number of public wires:          43
   Number of public wire bits:     207
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 61
     $and                            5
     $anyinit                        8
     $assume                         1
     $eq                             3
     $ff                             1
     $logic_and                      5
     $logic_not                      5
     $mux                           21
     $ne                             1
     $not                            3
     $or                             1
     $paramod$2b3a633f7bbc2a92129dd0bd4a738074dca1a491\tlul_slave_formal      1
     $paramod\skdbf\DW=s32'00000000000000000000000000110011      1
     $pmux                           3
     $reduce_bool                    1
     polaris_uart_ip                 1

=== $paramod\skdbf\DW=s32'00000000000000000000000000110011 ===

   Number of wires:                 20
   Number of wire bits:            270
   Number of public wires:          11
   Number of public wire bits:     161
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 15
     $and                            3
     $assume                         1
     $ff                             2
     $logic_not                      1
     $mux                            7
     $not                            1

=== $paramod$9a532d3a74189bb4cf9820f3f80245c16da3e5be\sfifo ===

   Number of wires:                 35
   Number of wire bits:            144
   Number of public wires:          12
   Number of public wire bits:      36
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 31
     $add                            2
     $and                            7
     $anyseq                         2
     $assume                         1
     $eq                             2
     $ff                             4
     $mem_v2                         1
     $mux                            7
     $ne                             1
     $not                            4

=== $paramod$2b3a633f7bbc2a92129dd0bd4a738074dca1a491\tlul_slave_formal ===

   Number of wires:                141
   Number of wire bits:            343
   Number of public wires:          69
   Number of public wire bits:     255
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                143
     $add                            1
     $and                            8
     $anyinit                       28
     $anyseq                        18
     $assert                         8
     $assume                        16
     $eq                            22
     $ff                             5
     $initstate                      1
     $le                             1
     $logic_not                      6
     $logic_or                       2
     $mux                           20
     $not                            4
     $pmux                           1
     $reduce_or                      1
     $sub                            1

=== design hierarchy ===

   openPolarisUART                   1
     $paramod$2b3a633f7bbc2a92129dd0bd4a738074dca1a491\tlul_slave_formal      1
     $paramod\skdbf\DW=s32'00000000000000000000000000110011      1
     polaris_uart_ip                 1
       $paramod$9a532d3a74189bb4cf9820f3f80245c16da3e5be\sfifo      2
       uart_rx                       1
       uart_tx                       1

   Number of wires:                441
   Number of wire bits:           1961
   Number of public wires:         197
   Number of public wire bits:     883
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                368
     $add                           10
     $and                           34
     $anyinit                       43
     $anyseq                        24
     $assert                         8
     $assume                        22
     $eq                            39
     $ff                            21
     $initstate                      1
     $le                             1
     $logic_and                      5
     $logic_not                     16
     $logic_or                       2
     $lt                             2
     $mem_v2                         2
     $mux                           87
     $ne                             3
     $neg                            1
     $not                           19
     $or                             2
     $pmux                          13
     $reduce_bool                    2
     $reduce_or                      4
     $shift                          2
     $shiftx                         1
     $sub                            4

6. Executing SMT2 backend.

6.1. Executing BMUXMAP pass.

6.2. Executing DEMUXMAP pass.
Creating SMT-LIBv2 representation of module $paramod$2b3a633f7bbc2a92129dd0bd4a738074dca1a491\tlul_slave_formal.
Creating SMT-LIBv2 representation of module $paramod$9a532d3a74189bb4cf9820f3f80245c16da3e5be\sfifo.
Creating SMT-LIBv2 representation of module $paramod\skdbf\DW=s32'00000000000000000000000000110011.
Creating SMT-LIBv2 representation of module uart_rx.
Creating SMT-LIBv2 representation of module uart_tx.
Creating SMT-LIBv2 representation of module polaris_uart_ip.
Creating SMT-LIBv2 representation of module openPolarisUART.

End of script. Logfile hash: 96ffc3619e, CPU: user 0.01s system 0.01s, MEM: 12.36 MB peak
Yosys 0.34+43 (git sha1 d21c464ae, clang 10.0.0-4ubuntu1 -fPIC -Os)
Time spent: 67% 2x write_smt2 (0 sec), 25% 2x read_ilang (0 sec), ...
